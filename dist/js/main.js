import*as d from"../meta/env.js";import{TextDecorator as i}from"./lib.js";document.addEventListener("DOMContentLoaded",async()=>{if("serviceWorker"in navigator)try{await navigator.serviceWorker.register(`${d.PUBLIC_URL}sw.js`)}catch(t){console.error(t)}const a=new i,n=document.querySelector("#source-text"),s=document.querySelector("#styles"),l=document.querySelector("#decorators");a.listStyles().forEach(t=>{const e=document.createElement("input"),r=document.createElement("label");r.innerText=t,e.dataset.style=t,e.classList.add("style"),e.readOnly=!0,s.appendChild(r),s.appendChild(e)}),a.listDecorators().forEach(t=>{const e=document.createElement("input"),r=document.createElement("label");r.innerText=t,e.dataset.decorator=t,e.classList.add("decorator"),e.readOnly=!0,l.appendChild(r),l.appendChild(e)}),n.addEventListener("input",()=>{const t=document.querySelectorAll(".style"),e=document.querySelectorAll(".decorator"),r=n.value;t.forEach(o=>{const c=o.dataset.style;o.value=a.decorateText(r,c)}),e.forEach(o=>{const c=o.dataset.decorator;o.value=a.decorateText(r,"nostyle",{leftDecorator:c,rightDecorator:c})})})});
